//
//  ProductDetailViewController.swift
//  LodjinhaSZ
//
//  Created by Tiago Chaves on 06/06/19.
//  Copyright (c) 2019 Tiago Chaves. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ProductDetailDisplayLogic: class {
	func displayProductDetail(viewModel: ProductDetail.ShowProductDetail.ViewModel)
	func displayReserveMessage(viewModel: ProductDetail.ReserveProduct.ViewModel)
}

class ProductDetailViewController: UIViewController, ProductDetailDisplayLogic {
	
	var interactor: ProductDetailBusinessLogic?
	var router: (NSObjectProtocol & ProductDetailRoutingLogic & ProductDetailDataPassing)?
	
	// MARK: Object lifecycle
	
	override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
		
		super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
		setup()
	}
	
	required init?(coder aDecoder: NSCoder) {
		
		super.init(coder: aDecoder)
		setup()
	}
	
	// MARK: Setup
	
	private func setup() {
		
		let viewController = self
		let interactor = ProductDetailInteractor()
		let presenter = ProductDetailPresenter()
		let router = ProductDetailRouter()
		
		viewController.interactor = interactor
		viewController.router = router
		interactor.presenter = presenter
		presenter.viewController = viewController
		router.viewController = viewController
		router.dataStore = interactor
	}
	
	// MARK: Routing
	
	override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
		
		if let scene = segue.identifier {
		
			let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
			
			if let router = router, router.responds(to: selector) {
				router.perform(selector, with: segue)
			}
		}
	}
	
	// MARK: View lifecycle
	
	override func viewDidLoad() {
		
		super.viewDidLoad()
		getProduct()
	}
	
	override func viewWillAppear(_ animated: Bool) {
		
		super.viewWillAppear(animated)
		
		self.tabBarController?.tabBar.isHidden = true
	}
	
	// MARK: Get Product
	
	@IBOutlet weak var productImageView: UIImageView!
	@IBOutlet weak var productNameLabel: UILabel!
	@IBOutlet weak var originalPriceLabel: UILabel!
	@IBOutlet weak var priceLabel: UILabel!
	@IBOutlet weak var productDescTextView: UITextView!
	@IBOutlet weak var priceView: UIView!
	
	func getProduct() {
		
		let request = ProductDetail.ShowProductDetail.Request()
		interactor?.getProduct(request: request)
	}
	
	func displayProductDetail(viewModel: ProductDetail.ShowProductDetail.ViewModel) {
		
		self.title = viewModel.product?.category?.desc ?? ""
		
		if let url = viewModel.product?.imageUrl {
			productImageView.setImage(withUrl: url)
		}else{
			productImageView.image = UIImage()
		}
		
		productNameLabel.text = "\(viewModel.product?.name ?? "Produto")"
		
		if viewModel.product?.isPromotion ?? false {
			originalPriceLabel.isHidden = false
			priceView.isHidden = false
			originalPriceLabel.text = "\(viewModel.product?.originalPrice ?? "R$ --")"
			priceLabel.text = "\(viewModel.product?.price ?? "R$ --")"
		}else{
			originalPriceLabel.isHidden = true
			priceView.isHidden = true
			priceLabel.text = "\(viewModel.product?.price ?? "R$ --")"
		}
		
		productDescTextView.text = (viewModel.product?.desc ?? "-").htmlToString
		productDescTextView.contentOffset = CGPoint(x: 0, y: 0)
	}
	
	// MARK: Reserve Product
	
	@IBOutlet weak var reserveProductButton: CornerRadiusButton!
	
	@IBAction func reserveProduct(_ sender: Any) {
		
		interactor?.reserveProduct(request: ProductDetail.ReserveProduct.Request())
	}
	
	func displayReserveMessage(viewModel: ProductDetail.ReserveProduct.ViewModel) {
		
		let alert = UIAlertController(title: "", message: viewModel.message, preferredStyle: .alert)
		let action = UIAlertAction(title: "Ok", style: .default)
		
		alert.addAction(action)
		
		present(alert, animated: true)
	}
	
}
