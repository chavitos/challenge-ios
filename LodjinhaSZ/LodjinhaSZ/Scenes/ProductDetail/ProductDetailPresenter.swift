//
//  ProductDetailPresenter.swift
//  LodjinhaSZ
//
//  Created by Tiago Chaves on 06/06/19.
//  Copyright (c) 2019 Tiago Chaves. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ProductDetailPresentationLogic {
	func presentProductDetail(response: ProductDetail.ShowProductDetail.Response)
	func presentReserveMessage(response: ProductDetail.ReserveProduct.Response)
}

class ProductDetailPresenter: ProductDetailPresentationLogic {
	
	weak var viewController: ProductDetailDisplayLogic?
	
	// MARK: Get Product
	
	func presentProductDetail(response: ProductDetail.ShowProductDetail.Response) {
		
		let viewModel = ProductDetail.ShowProductDetail.ViewModel(product: response.product)
		viewController?.displayProductDetail(viewModel: viewModel)
	}
	
	// MARK: Reserve Product
	
	func presentReserveMessage(response: ProductDetail.ReserveProduct.Response) {
		
		var message:String = "Não foi possível reservar o produto"
		
		if response.error == nil, let result = response.productReserve?.result, result == "success" {
			
			message = "Produto reservado com sucesso"
		}
		
		viewController?.displayReserveMessage(viewModel: ProductDetail.ReserveProduct.ViewModel(message: message, error: response.error))
	}
}
