//
//  CategoryProductsWorker.swift
//  LodjinhaSZ
//
//  Created by Tiago Chaves on 05/06/19.
//  Copyright (c) 2019 Tiago Chaves. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

class CategoryProductsWorker {
	
	var CategoryProductsWorker:CategoryProductsWorkerProtocol
	
	init(_ CategoryProductsWorker:CategoryProductsWorkerProtocol) {
		
		self.CategoryProductsWorker = CategoryProductsWorker
	}
	
	func getProducts(ofCategory categoryId:Int, withOffset offset:Int, andLimit limit:Int, completion:@escaping(ProductList?,Error?) -> Void) {
	
		CategoryProductsWorker.getProducts(ofCategory: categoryId, withOffset: offset, andLimit: limit) { (CategoryProducts: () throws -> ProductList) in
		
			do{
				let CategoryProducts = try CategoryProducts()
				completion(CategoryProducts,nil)
			}catch let error{
				completion(nil, WorkerErrors.networkProblem(error: error))
			}
		}
	}
}

protocol CategoryProductsWorkerProtocol {
	func getProducts(ofCategory categoryId:Int, withOffset offset:Int, andLimit limit:Int, completion:@escaping(() throws -> ProductList) -> Void)
}
