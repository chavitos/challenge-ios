//
//  HomePresenter.swift
//  LodjinhaSZ
//
//  Created by Tiago Chaves on 02/06/19.
//  Copyright (c) 2019 Tiago Chaves. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol HomePresentationLogic {
	func presentBanners(response: Home.GetBannerList.Response)
}

class HomePresenter: HomePresentationLogic {
	
	weak var viewController: HomeDisplayLogic?
	
	// MARK: Get Banners
	
	func presentBanners(response: Home.GetBannerList.Response) {
		
		if response.error == nil, let banners = response.banners {
			
			getViewModel(ofBanners: banners) { (bannerViewModel) in
				
				let viewModel = Home.GetBannerList.ViewModel(banners: bannerViewModel, error: nil)
				self.viewController?.displayBanners(viewModel: viewModel)

			}
		}else{
			let viewModel = Home.GetBannerList.ViewModel(banners: nil, error: response.error)
			viewController?.displayBanners(viewModel: viewModel)
		}
	}
	
	private func getViewModel(ofBanners banners:BannerList, completion:@escaping([BannerViewModel]) -> Void) {
		
		let group = DispatchGroup()
		var viewModelBanners:[BannerViewModel] = []
		
		for banner in banners.data ?? [] {
			
			group.enter()
			if let url = banner.imageUrl {
				
				DownloadHelper.sharedInstance.cachedImageRequest(fromUrl: url) { (image, error) in
					
					group.leave()
					
					let viewModelBanner = BannerViewModel(bannerImage: image, bannerLink: banner.urlLink)
					viewModelBanners.append(viewModelBanner)
				}
			}
		}
		
		group.notify(queue: .global()) {
			completion(viewModelBanners)
		}
	}
}
