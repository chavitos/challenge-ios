//
//  CategoryProductsPresenterTests.swift
//  LodjinhaSZ
//
//  Created by Tiago Chaves on 07/06/19.
//  Copyright (c) 2019 Tiago Chaves. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import LodjinhaSZ
import XCTest

class CategoryProductsPresenterTests: XCTestCase {
	
	// MARK: Subject under test
	
	var sut: CategoryProductsPresenter!
	
	// MARK: Test lifecycle
	
	override func setUp() {
		
		super.setUp()
		setupCategoryProductsPresenter()
	}
	
	override func tearDown() {
		
		super.tearDown()
	}
	
	// MARK: Test setup
	
	func setupCategoryProductsPresenter() {
		
		sut = CategoryProductsPresenter()
	}
	
	// MARK: Test doubles
	
	class CategoryProductsDisplayLogicSpy: CategoryProductsDisplayLogic {
		
		var displayProductsCalled = false
		var displayCategoryNameCalled = false
		var displayProductDetailCalled = false
		
		var displayCategoryNameViewModel:CategoryProducts.GetCategoryName.ViewModel!
		var displayProductsViewModel:CategoryProducts.GetCategoryProducts.ViewModel!
		
		func displayProducts(viewModel: CategoryProducts.GetCategoryProducts.ViewModel) {
			displayProductsCalled = true
			displayProductsViewModel = viewModel
		}
		
		func displayCategoryName(viewModel: CategoryProducts.GetCategoryName.ViewModel) {
			displayCategoryNameCalled = true
			displayCategoryNameViewModel = viewModel
		}
		
		func displayProductDetail(viewModel: CategoryProducts.ShowProductDetail.ViewModel) {
			displayProductDetailCalled = true
		}
	}
	
	// MARK: Tests
	
	func testPresentSomething() {
		
		// Given
		let viewController = CategoryProductsDisplayLogicSpy()
		sut.viewController = viewController
		let response = CategoryProducts.GetCategoryProducts.Response(products: Seeds.NetworkModels.networkProductList, error: nil)
		let expectedViewModel = Seeds.ViewModels.productsViewModel
		
		// When
		sut.presentCategoryProducts(response: response)
		
		// Then
		XCTAssertTrue(viewController.displayProductsCalled, "presentCategoryProducts(response:) should ask the view controller to display the result")
		XCTAssertEqual(viewController.displayProductsViewModel.products, expectedViewModel.products)
	}
}
