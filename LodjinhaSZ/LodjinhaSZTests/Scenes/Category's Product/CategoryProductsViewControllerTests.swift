//
//  CategoryProductsViewControllerTests.swift
//  LodjinhaSZ
//
//  Created by Tiago Chaves on 07/06/19.
//  Copyright (c) 2019 Tiago Chaves. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import LodjinhaSZ
import XCTest

class CategoryProductsViewControllerTests: XCTestCase {
	
	// MARK: Subject under test
	
	var sut: CategoryProductsViewController!
	var window: UIWindow!
	
	// MARK: Test lifecycle
	
	override func setUp() {
		
		super.setUp()
		window = UIWindow()
		setupCategoryProductsViewController()
	}
	
	override func tearDown() {
		
		window = nil
		super.tearDown()
	}
	
	// MARK: Test setup
	
	func setupCategoryProductsViewController() {
		
		let bundle = Bundle.main
		let storyboard = UIStoryboard(name: "Main", bundle: bundle)
		sut = storyboard.instantiateViewController(withIdentifier: "CategoryProductsViewController") as? CategoryProductsViewController
	}
	
	func loadView() {
		
		window.addSubview(sut.view)
		RunLoop.current.run(until: Date())
	}
	
	// MARK: Test doubles
	
	class CategoryProductsBusinessLogicSpy: CategoryProductsBusinessLogic {
		
		var getCategoryProductsCalled = false
		var getCategoryNameCalled = false
		var storeProductCalled = false
		
		var getCategoryProductsRequest:CategoryProducts.GetCategoryProducts.Request!
		var storeProductRequest:CategoryProducts.ShowProductDetail.Request!
		
		func getCategoryProducts(request: CategoryProducts.GetCategoryProducts.Request) {
			getCategoryProductsCalled = true
			getCategoryProductsRequest = request
		}
		
		func getCategoryName(request: CategoryProducts.GetCategoryName.Request) {
			getCategoryNameCalled = true
		}
		
		func storeProduct(request: CategoryProducts.ShowProductDetail.Request) {
			storeProductCalled = true
			storeProductRequest = request
		}
	}
	
	class TableViewSpy: UITableView {

		var reloadDataCalled = false
		
		override func reloadData() {
			
			reloadDataCalled = true
		}
	}
	
	// MARK: Tests
	
	func testViewControllerShouldAskInteractorToGetCategoryProductsAndNameOnLoad() {
		
		// Given
		let interactor = CategoryProductsBusinessLogicSpy()
		sut.interactor = interactor
		
		// When
		loadView()
		
		// Then
		XCTAssertTrue(interactor.getCategoryProductsCalled, "viewDidLoad() should ask the interactor to get category's products")
		XCTAssertTrue(interactor.getCategoryNameCalled, "viewDidLoad() should ask the interactor to get category's name")
		XCTAssertEqual(interactor.getCategoryProductsRequest.offset, 0)
		XCTAssertEqual(interactor.getCategoryProductsRequest.limit, 20)
	}
	
	func testViewControllerShouldUpdateTitle() {
		
		// Given
		
		// When
		loadView()
		
		sut.displayCategoryName(viewModel: CategoryProducts.GetCategoryName.ViewModel(categoryName: "Tst"))
		
		// Then
		XCTAssertEqual(sut.title, "Tst")
	}
}
